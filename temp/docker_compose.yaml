# Copyright (c) Mainflux
# SPDX-License-Identifier: Apache-2.0

version: "3.7"

networks:
  mainfluxlabs-base-net:
    driver: bridge

volumes:
  mainfluxlabs-auth-db-volume:
  mainfluxlabs-users-db-volume:
  mainfluxlabs-things-db-volume:
  mainfluxlabs-auth-redis-volume:
  mainfluxlabs-es-redis-volume:
  mainfluxlabs-mqtt-broker-volume:
  mainfluxlabs-mqtt-db-volume:
  mainfluxlabs-influxdb-volume:
  mainfluxlabs-filestore-db-volume:
  mainfluxlabs-filestore-volume:
  mainfluxlabs-webhooks-db-volume:

services:
  ui:
    image: ${MF_RELEASE_PREFIX}/ui:${MF_RELEASE_TAG}
    container_name: mainfluxlabs-ui
    restart: on-failure
    ports:
      - ${MF_UI_PORT}:${MF_UI_PORT}
    networks:
      - mainfluxlabs-base-net
    environment:
      MF_UI_PORT: ${MF_UI_PORT}
      MF_UI_MQTT_WS_URL: ${MF_UI_MQTT_WS_URL}
      MF_PROXY_AUTH: ${MF_PROXY_AUTH}
      MF_PROXY_LOGOUT_URL: ${MF_PROXY_LOGOUT_URL}
      MF_UI_APP_PREFIX: ${MF_UI_APP_PREFIX}
    command: /entrypoint.sh

  nginx:
    image: nginx:1.20.0-alpine
    container_name: mainfluxlabs-nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx-${AUTH-key}.conf:/etc/nginx/nginx.conf.template
      - ./nginx/entrypoint.sh:/docker-entrypoint.d/entrypoint.sh
      - ./nginx/snippets:/etc/nginx/snippets
      - ./ssl/authorization.js:/etc/nginx/authorization.js
      - ./ssl/certs/mainfluxlabs-server.crt:/etc/ssl/certs/mainfluxlabs-server.crt
      - ./ssl/certs/ca.crt:/etc/ssl/certs/ca.crt
      - ./ssl/certs/mainfluxlabs-server.key:/etc/ssl/private/mainfluxlabs-server.key
      - ./ssl/dhparam.pem:/etc/ssl/certs/dhparam.pem
    ports:
      - ${MF_NGINX_HTTP_PORT}:${MF_NGINX_HTTP_PORT}
      - ${MF_NGINX_SSL_PORT}:${MF_NGINX_SSL_PORT}
      - ${MF_NGINX_MQTT_PORT}:${MF_NGINX_MQTT_PORT}
      - ${MF_NGINX_MQTTS_PORT}:${MF_NGINX_MQTTS_PORT}
    networks:
      - mainfluxlabs-base-net
    env_file:
      - .env
    depends_on:
      - things
      - users
      - mqtt-adapter
      - http-adapter

  ## AUTH SERVICE
  auth-db:
    image: postgres:13.3-alpine
    container_name: mainfluxlabs-auth-db
    restart: on-failure
    environment:
      POSTGRES_USER: ${MF_AUTH_DB_USER}
      POSTGRES_PASSWORD: ${MF_AUTH_DB_PASS}
      POSTGRES_DB: ${MF_AUTH_DB}
    networks:
      - mainfluxlabs-base-net
    volumes:
      - mainfluxlabs-auth-db-volume:/var/lib/postgresql/data

  auth:
    image: mainfluxlabs/auth:${MF_RELEASE_TAG}
    container_name: mainfluxlabs-auth
    depends_on:
      - auth-db
    expose:
      - ${MF_AUTH_GRPC_PORT}
    restart: on-failure
    environment:
      MF_AUTH_LOG_LEVEL: ${MF_AUTH_LOG_LEVEL}
      MF_AUTH_DB_HOST: auth-db
      MF_AUTH_DB_PORT: ${MF_AUTH_DB_PORT}
      MF_AUTH_DB_USER: ${MF_AUTH_DB_USER}
      MF_AUTH_DB_PASS: ${MF_AUTH_DB_PASS}
      MF_AUTH_DB: ${MF_AUTH_DB}
      MF_AUTH_HTTP_PORT: ${MF_AUTH_HTTP_PORT}
      MF_AUTH_GRPC_PORT: ${MF_AUTH_GRPC_PORT}
      MF_AUTH_SECRET: ${MF_AUTH_SECRET}
      MF_AUTH_LOGIN_TOKEN_DURATION: ${MF_AUTH_LOGIN_TOKEN_DURATION}
      MF_JAEGER_URL: ${MF_JAEGER_URL}
      MF_USERS_ADMIN_EMAIL: ${MF_USERS_ADMIN_EMAIL}
      MF_USERS_GRPC_URL: ${MF_USERS_GRPC_URL}
      MF_USERS_CA_CERTS: ${MF_USERS_CA_CERTS}
      MF_USERS_CLIENT_TLS: ${MF_USERS_CLIENT_TLS}
      MF_THINGS_AUTH_GRPC_URL: ${MF_THINGS_AUTH_GRPC_URL}
      MF_THINGS_CA_CERTS: ${MF_THINGS_CA_CERTS}
      MF_THINGS_CLIENT_TLS: ${MF_THINGS_CLIENT_TLS}
    ports:
      - ${MF_AUTH_HTTP_PORT}:${MF_AUTH_HTTP_PORT}
      - ${MF_AUTH_GRPC_PORT}:${MF_AUTH_GRPC_PORT}
    networks:
      - mainfluxlabs-base-net